<?php
 
namespace Informatics\Suppliers\Controller\Adminhtml\Grid;
 
use Magento\Backend\App\Action;
use Informatics\Suppliers\Model\SupplierproductsFactory;
use Magento\Framework\Mail\Template\TransportBuilder;
use Magento\Framework\Translate\Inline\StateInterface;

 
class Report extends \Magento\Backend\App\Action
{
   
    protected $_coreRegistry = null;

    protected $contactFactory;

    protected $transportBuilder;

    protected $inlineTranslation;

    protected $customHelper;
 
    protected $resultPageFactory;

    /**
     * @var \Magento\Framework\App\Response\Http\FileFactory
     */
    protected $fileFactory;

    protected $_dir;
 
  
    public function __construct(
        Action\Context $context,
        SupplierproductsFactory $contactFactory,
        TransportBuilder $transportBuilder,
        StateInterface $inlineTranslation,
        \Informatics\Suppliers\Helper\Data $customHelper,
        \Magento\Framework\App\Response\Http\FileFactory $fileFactory,
        \Magento\Framework\Filesystem\DirectoryList $dir,
        \Magento\Framework\Registry $registry
    ) {
        $this->contactFactory = $contactFactory;
        $this->transportBuilder = $transportBuilder;
        $this->inlineTranslation = $inlineTranslation;
        $this->customHelper = $customHelper;
        $this->fileFactory = $fileFactory;
        $this->_dir = $dir;
        $this->_coreRegistry = $registry;
        parent::__construct($context);
    }

    protected function _isAllowed()
    {
        return true;
    }

    public function execute()
    {
         
       
        $id = $this->getRequest()->getParam('id');

        $model = $this->_objectManager->create('Informatics\Suppliers\Model\Supplierproducts');
 
        if ($id) {
                 
            $selected = $model->getProducts($this->getRequest()->getParam('id'));
        
            if (!is_array($selected)) {
                $selected = [];
            }

        }

/***************************************************************************************************************************************/
$pdf = new \Zend_Pdf();
        $pdf->pages[] = $pdf->newPage(\Zend_Pdf_Page::SIZE_A4);
        $page = $pdf->pages[0]; // this will get reference to the first page.
        $style = new \Zend_Pdf_Style();
        $style->setLineColor(new \Zend_Pdf_Color_Rgb(0,0,0));
        $font = \Zend_Pdf_Font::fontWithName(\Zend_Pdf_Font::FONT_TIMES);
        $style->setFont($font,15);
        $page->setStyle($style);
        $width = $page->getWidth();
        $hight = $page->getHeight();
        $x = 30;
        $pageTopalign = 850; //default PDF page height
        $this->y = 850 - 100; //print table row from page top – 100px
        //Draw table header row’s
        $style->setFont($font,16);
        $page->setStyle($style);
        $page->drawRectangle(30, $this->y + 10, $page->getWidth()-30, $this->y +70, \Zend_Pdf_Page::SHAPE_DRAW_STROKE);
        $style->setFont($font,15);
        $page->setStyle($style);
        $page->drawText(__("Cutomer Details"), $x + 5, $this->y+50, 'UTF-8');
        $style->setFont($font,11);
        $page->setStyle($style);
        $page->drawText(__("Name : %1", "John Smith"), $x + 5, $this->y+33, 'UTF-8');
        $page->drawText(__("Email : %1","test@example.com"), $x + 5, $this->y+16, 'UTF-8');
 
        $style->setFont($font,12);
        $page->setStyle($style);
        $page->drawText(__("PRODUCT NAME"), $x + 60, $this->y-10, 'UTF-8');
        $page->drawText(__("PRICE"), $x + 200, $this->y-10, 'UTF-8');
        $page->drawText(__("QUANTITY"), $x + 310, $this->y-10, 'UTF-8');
        $page->drawText(__("TOTAL"), $x + 440, $this->y-10, 'UTF-8');
 
        $style->setFont($font,10);
        $page->setStyle($style);
        $add = 9;
        $page->drawText("$10.00", $x + 210, $this->y-30, 'UTF-8');
        $page->drawText(5, $x + 330, $this->y-30, 'UTF-8');
        $page->drawText("$50.00", $x + 470, $this->y-30, 'UTF-8');
        $pro = "ABC product";
        $page->drawText($pro, $x + 65, $this->y-30, 'UTF-8');
        $page->drawRectangle(30, $this->y -62, $page->getWidth()-30, $this->y + 10, \Zend_Pdf_Page::SHAPE_DRAW_STROKE);
        $page->drawRectangle(30, $this->y -62, $page->getWidth()-30, $this->y - 100, \Zend_Pdf_Page::SHAPE_DRAW_STROKE);
        $style->setFont($font,15);
        $page->setStyle($style);
        $page->drawText(__("Total : %1", "$50.00"), $x + 435, $this->y-85, 'UTF-8');
        $style->setFont($font,10);
        $page->setStyle($style);
        $page->drawText(__("ABC Footer example"), ($page->getWidth()/2)-50, $this->y-200);
 
        $fileName = 'example.pdf';
 
        $this->fileFactory->create(
           $fileName,
           $pdf->render(),
           \Magento\Framework\App\Filesystem\DirectoryList::VAR_DIR, // this pdf will be saved in var directory with the name example.pdf
           'application/pdf'
        );

        $filepath = $this->_dir->getPath('var');
        $pdfFile  = $filepath.'/'.$fileName;
/***********************************************************************************************************************************/
 
        $_helper = $this->customHelper;

        #$this->_reports = [['productid'=>'first', 'soldquantity'=>'second']];
        //$reportz = [['productid'=>'PRODUCT ID', 'soldquantity'=>'SOLD QUANTITY']];
        //$reportz = array("productid"=> "PRODUCT ID", "soldquantity"=>"SOLD QUANTITY");
        $reportz = array();
        foreach($selected as $prdct)
        {
            $sold = $_helper->getSoldQtyByProductId($prdct);
            //$availableNow = $_helper->getQtyByProductId($prdct);
            //$this->_reports[] = ['productid'=> $prdct, 'sold-quantity' => $sold, 'now-available' => $availableNow]; //$suppliers->getSuppid()
            $reportz[] = ["productid"=> $prdct, "soldquantity" => $sold];
        }
        #print_r($reportz); exit;

        $report =   [
                        'report_date' => date("j F Y", strtotime('-1 day')),
                        'report' => $reportz
                    ];

            $postObject = new \Magento\Framework\DataObject();
            $postObject->setData($reportz);

            try
            {
                $this->inlineTranslation->suspend();
                $transport = $this->transportBuilder
                    ->setTemplateIdentifier('supplier_report_template')
                    ->setTemplateOptions(['area' => \Magento\Framework\App\Area::AREA_FRONTEND, 'store' => \Magento\Store\Model\Store::DEFAULT_STORE_ID])
                    ->setTemplateVars(['report' => $postObject])
                    ->setFrom(['name' => 'SOUQERZ','email' => 'info@@souqerz.com'])
                    ->addTo(['info@@souqerz.com'])
                    ->addAttachment($pdfFile)
                    ->getTransport();

                $transport->sendMessage();
                $this->inlineTranslation->resume();

                $this->messageManager->addSuccess(__('Report Successfully Sent.'));
                return $this->_redirect('*/*/');

            } catch(\Exception $e) {
                $this->messageManager->addError(__('Failed...Try again' .$e->getMessage()));
                return $this->_redirect('*/*/');
                echo $e->getMessage();
                #exit;   
            }

        #print_r($this->_reports);exit;

    }
}